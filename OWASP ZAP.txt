ZAP (Docs; UI Overview):-
ZAP Introduction; ZAP Installation; ZAP Features; Desktop UI Overview; Add-ons (Access Control Testing; Active Scanner; Advanced SQL injection); Scan Policy Manager dialog (Threshold, Strength); Scany Policy (Client browser, Information gathering, Injection, Miscellaneous, Server security: Threshold, Strength); Attacks (Spider, Active Scan, Forced browser site, Port Scan host, Ajax Spider, Fuzz); Active Scan dialog (Scope, Input Vectors, Custom Vectors, Technology, Policy, Filter); Option dialog (Dynamic SSL Certificate); ZAP Modes (Standard Mode, Safe Mode, Protected Mode, Attack Mode); ZAP will intercept the client and Server actions; Security Testing means that it will check the vulnerabilities of the application;  Quick Start (Automation Scan, Manual Explore); Ajax Spider; Attacks UI  (Spider, Active Scan, Passive Scan Queue, Alerts shows attack Result); Know the Vulnerabilities of app (Ex:- http://testfire.net/); Spider Option & Ajax Spider Options:- Collects the URLs and Shows Alerts flags;

Attacks List1(Source Code Disclosure-SQL;  X- Frame-Options Header Not Set;  Absence of Anti CSRF Tokens;  Content Security Policy (CSP) Header Not Set; Cookies without Same site Attribute;  Cross-Domain JavaScript Source File Inclusion;  Feature Policy Header Not Set; Incomplete or No cache-control and Pragma HTTP Header; Server Leaks version Information via HTTP Response); Examples Sites (http://trcaking-protectio.cdn.mozilla.net, http://testfire.net, https://blocklists.settings.services.mozilla.com);
Fuzzing; Active Scan  Screen Option; 

Attacks  List2 (Analyser; Plugin; Path traversal; Remote File Inclusion; Source Code Disclosure; Cross Site Scripting Reflector; SQL Injection; Server Side Code Injection; Remote OS Command Injection; Directory Browsing;  External Redirect; Buffer Overview; CRLF Injection; Parameter Tempering; Script Active Scan Rules; Remote Code Execution - Shell Shock; Anti CSRF Tokens Scanner; Heartbleed OpenSSL Vulnerability; Cross Domain Misconfiguration); We will apply different attacks for hunting Vulnerabilities of the application and Shows attacks effect in Alerts tabs which it was with flags; Attacks will be shown under Alerts tab; Attacks is always on API(GET, POST);

Breakpoints, Break Tab, Repeater (Manipulate Request and Response data); Example (https://bodgeit.herokuapp.com/login.jsp); Request Tab; ZAP intercepts the Requests to Server; Breakpoints catch client request and manipulate the data; Authentication ( Form Based; Http/NTLM; Manual; Script-based; JSON) & Session Management(Cookie-based; HTTP Authentication); Forced Browse Site Attack (Get the directories  from target forcibly); Ex:- http://grayhat.teachhable.com; HUD (Heads UP Display);  ZAP Scripts (Codes, If you wants code, then it will enable by yourself); .zst extention ("Key": value pair); Attack Surface Detector add on (Fetch the parameters from Endpoint); Option API Screen; ZAP API UI (API References);

ZAP Jx Browser (Work as Google browser); Invoking applications into ZAp; Burp Suite Tool (dynamic web vulnerability scanner): ZAP pass the entire target site to Burp Suite tool;

Attack List3 (Anti CSRF Test form; Regular Expression Tester ); Attacker do malicious actions in context of victim user, which is authenticated; Token Generator (Analize the Authorization Token); Port Scan (Scan the Target Site Ports); Replacer (Replace the data with our desired data); ZAP Scanning Reports (High; Low; Medium; Informal);